{"name":"Lein-coffeescript","tagline":"A Leiningen plugin for running CoffeeScript compiler","body":"lein-coffeescript\r\n=================\r\n\r\n**[CoffeeScript](http://coffeescript.org) is a little language that compiles into JavaScript.** Underneath that awkward Java-esque patina, JavaScript has always had a gorgeous heart. CoffeeScript is an attempt to expose the good parts of JavaScript in a simple way.\r\n\r\nThe golden rule of CoffeeScript is: *\"It's just JavaScript\"*. The code compiles one-to-one into the equivalent JS, and there is no interpretation at runtime. You can use any existing JavaScript library seamlessly from CoffeeScript (and vice-versa). The compiled output is readable and pretty-printed, will work in every JavaScript runtime, and tends to run as fast or faster than the equivalent handwritten JavaScript.\r\n\r\n[lein-coffeescript](https://github.com/vbauer/lein-coffeescript) is a Leiningen plugin that allows to use CoffeeScript compiler.\r\n\r\n[![Build Status](https://travis-ci.org/vbauer/lein-coffeescript.svg?branch=master)](https://travis-ci.org/vbauer/lein-coffeescript)\r\n[![Dependencies Status](http://jarkeeper.com/vbauer/lein-coffeescript/status.png)](http://jarkeeper.com/vbauer/lein-coffeescript)\r\n\r\n\r\nPre-requirements\r\n================\r\n\r\nInstall [NodeJS](http://nodejs.org/) and [NPM](https://github.com/npm/npm) (package manager for Node) to install CoffeeScript:\r\n\r\n* On Ubuntu:\r\n```\r\nsudo apt-get install nodejs\r\n```\r\n* On Mac OS X:\r\n```\r\nbrew install node\r\n```\r\n\r\n\r\nInstallation\r\n============\r\n\r\nInstall [CoffeeScript](https://www.npmjs.org/package/coffee-script) to use lein-coffeescript plugin. It could be done in few ways:\r\n\r\n* Use NPM to install CoffeeScript globally:\r\n```\r\nnpm install lein-coffeescript -g\r\n```\r\n* You can also install CoffeeScript in the current directory:\r\n```\r\nnpm install lein-coffeescript\r\n```\r\n* Use [lein-npm](https://github.com/bodil/lein-npm) plugin:\r\n```\r\nlein npm install\r\n```\r\n* Use just Leiningen:\r\n```\r\nlein deps\r\n```\r\n\r\nSetup\r\n-----\r\n\r\nTo enable lein-coffeescript for your project, put the following in the :plugins vector of your project.clj file:\r\n\r\n[![Clojars Project](http://clojars.org/lein-coffeescript/latest-version.svg)](http://clojars.org/lein-coffeescript)\r\n\r\n\r\nConfiguration\r\n=============\r\n\r\nTo configure lein-coffeescript, put the :coffeescript parameter in the file project.clj. It could be a single configuration (simple map) or a collection of configurations (for multiple configuration).\r\n\r\n```clojure\r\n; single configuration\r\n:coffeescript {:sources \"src/*.cs\"}\r\n\r\n; multiple configurations\r\n:coffeescript [{:sources \"src/*.cs\"\r\n                :bare false\r\n                :map true}\r\n               {:sources [\"src/*.coffee\" \"resources/*.cs\"]\r\n                :bare true}]\r\n```\r\n\r\n\r\nConfiguration parameters\r\n------------------------\r\n\r\n<dl>\r\n\r\n  <dt>:sources</dt>\r\n  <dd>List of input CoffeeScript sources. It is possible to use a single source or a vector of sources. To configure this parameter, you could also use a <a href=\"http://en.wikipedia.org/wiki/Glob_(programming)\">Glob Patterns</a>.</dd>\r\n\r\n  <dt>:excludes</dt>\r\n  <dd>List of glob patterns to prevent processing of some files. It is also possible to use both variants: single pattern and collection of patterns.</dd>\r\n\r\n  <dt>:map</dt>\r\n  <dd>Generate source maps alongside the compiled JavaScript files. Adds <code>sourceMappingURL</code> directives to the JavaScript as well. Default value: false.</dd>\r\n\r\n  <dt>:bare</dt>\r\n  <dd>Compile the JavaScript without the top-level function safety wrapper. Default value: false</dd>\r\n\r\n  <dt>:join</dt>\r\n  <dd>Before compiling, concatenate all scripts together in the order they were passed, and write them into the specified file. Useful for building large projects. It is not defined by default.</dd>\r\n\r\n  <dt>:output</dt>\r\n  <dd>Write out all compiled JavaScript files into the specified directory. It is not defined by default. Source directory will be used of generated JS files.</dd>\r\n\r\n</dl>\r\n\r\n\r\nHooks\r\n-----\r\n\r\nTo enable this plugin in the compile stage, use the following hook:\r\n```clojure\r\n:hooks [lein-coffeescript.plugin]\r\n```\r\n\r\nExamples\r\n========\r\n\r\nDetailed example\r\n----------------\r\n\r\n```clojure\r\n:coffeescript {:sources \"resources/*.coffee\"\r\n               :excludes [\"resources/tests.coffee\" \"resources/bad.coffee\"]\r\n               :map true\r\n               :join \"app.js\"\r\n               :output \"target/js\"\r\n               :bare false\r\n               :debug true}\r\n```\r\n\r\n\r\nExample project\r\n---------------\r\n\r\nJust clone the current repository and try to play with [example project](https://github.com/vbauer/lein-coffeescript/tree/master/example) for better understanding how to use lein-coffeescript.\r\n\r\n\r\nUsage\r\n=====\r\n\r\nTo compile CoffeeScript files using configuration from project.clj, you should use:\r\n```bash\r\nlein coffeescript\r\n```\r\n\r\nTo show help:\r\n```bash\r\nlein help coffeescript\r\n```\r\n\r\n\r\nThanks to\r\n=========\r\n\r\nCoffeeScript author [Jeremy Ashkenas](https://github.com/jashkenas) and other developers who worked on this great project.\r\n\r\n\r\nMight also like\r\n===============\r\n\r\n* [lein-jslint](https://github.com/vbauer/lein-jslint) - a Leiningen plugin for running javascript code through JSLint.\r\n* [lein-jshint](https://github.com/vbauer/lein-jshint) - a Leiningen plugin for running javascript code through JSHint.\r\n* [lein-plantuml](https://github.com/vbauer/lein-plantuml) - a Leiningen plugin for generating UML diagrams using PlantUML.\r\n* [lein-asciidoctor](https://github.com/asciidoctor/asciidoctor-lein-plugin) - A Leiningen plugin for generating documentation using Asciidoctor.\r\n\r\n\r\nLicense\r\n=======\r\n\r\nCopyright Â© 2014 Vladislav Bauer\r\n\r\nDistributed under the Eclipse Public License, the same as Clojure.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}